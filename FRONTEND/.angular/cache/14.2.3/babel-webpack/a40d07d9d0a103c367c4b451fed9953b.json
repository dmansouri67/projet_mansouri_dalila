{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { ProduitComponentComponent } from './produit-component/produit-component.component';\nimport { FormAccountComponentComponent } from './form-account-component/form-account-component.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './core/guard/auth.guard';\nimport { LoginComponent } from './login/login.component';\nimport { SearchComponent } from './search/search.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: 'login',\n  pathMatch: 'full'\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'home',\n  component: HomeComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'produit',\n  component: ProduitComponentComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'form',\n  component: FormAccountComponentComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'search',\n  component: SearchComponent,\n  canActivate: [AuthGuard]\n} // On sécurise toutes les routes avec le guard.\n// Si l'utilisateur n'est pas connecté, il sera redirigé vers la page de login.\n// Le rôle du guard est de piloter le rooting. C'est le service qui va décider si l'utilisateur peut accéder à la page ou non.\n];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}