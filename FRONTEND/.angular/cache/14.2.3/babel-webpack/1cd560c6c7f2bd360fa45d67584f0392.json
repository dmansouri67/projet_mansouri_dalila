{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { fromEvent, of } from 'rxjs';\nimport { map, distinctUntilChanged, debounceTime, switchMap, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/search.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"input\"];\n\nfunction SearchComponent_ul_6_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵelement(1, \"img\", 10);\n    i0.ɵɵelementStart(2, \"div\", 11)(3, \"h5\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", user_r4.avatar_url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_r4.login);\n  }\n}\n\nfunction SearchComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 7);\n    i0.ɵɵtemplate(1, SearchComponent_ul_6_li_1_Template, 5, 2, \"li\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const response_r2 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", response_r2.items);\n  }\n}\n\nexport let SearchComponent = /*#__PURE__*/(() => {\n  class SearchComponent {\n    constructor(_service) {\n      this._service = _service;\n    }\n\n    ngAfterViewInit() {\n      this.searchField$ = fromEvent(this.input.nativeElement, `keyup`);\n      this.model = this.searchField$.pipe(map(event => event.target.value), debounceTime(300), distinctUntilChanged(), switchMap(term => this._service.search(term).pipe(catchError(() => {\n        return of([]);\n      }))));\n    }\n\n  }\n\n  SearchComponent.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SearchService));\n  };\n\n  SearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    viewQuery: function SearchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    decls: 49,\n    vars: 3,\n    consts: [[1, \"form-group\"], [\"for\", \"github-search\"], [\"id\", \"github-search\", \"type\", \"text\", \"placeholder\", \"GitHub Users\", 1, \"form-control\"], [\"input\", \"\"], [\"class\", \"list-unstyled\", 4, \"ngIf\"], [1, \"list-group\"], [1, \"list-group-item\"], [1, \"list-unstyled\"], [\"class\", \"media\", 4, \"ngFor\", \"ngForOf\"], [1, \"media\"], [\"alt\", \"user.login\", 1, \"mr-3\", 3, \"src\"], [1, \"media-body\"], [1, \"mt-0\", \"mb-1\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Search for GitHub Users:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2, 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵtemplate(6, SearchComponent_ul_6_Template, 2, 1, \"ul\", 4);\n        i0.ɵɵpipe(7, \"async\");\n        i0.ɵɵelementStart(8, \"h1\");\n        i0.ɵɵtext(9, \" A Search example that gets Usernames and Avatars from the \");\n        i0.ɵɵelementStart(10, \"code\");\n        i0.ɵɵtext(11, \"GitHub\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"ul\", 5)(13, \"li\", 6);\n        i0.ɵɵtext(14, \" 1. \");\n        i0.ɵɵelementStart(15, \"code\");\n        i0.ɵɵtext(16, \"map\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \" - To transform the \");\n        i0.ɵɵelementStart(18, \"code\");\n        i0.ɵɵtext(19, \"keyup\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \" event into a text that could be used for the search. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"li\", 6);\n        i0.ɵɵtext(22, \" 2. \");\n        i0.ɵɵelementStart(23, \"code\");\n        i0.ɵɵtext(24, \"debounceTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \" - To wait until x ms before doing something. So if the user changes anything within those x ms, it won't be accounted for. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"li\", 6);\n        i0.ɵɵtext(27, \" 3. \");\n        i0.ɵɵelementStart(28, \"code\");\n        i0.ɵɵtext(29, \"distinctUntilChanged\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30, \" - To check if the value has actually changed within x ms. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"li\", 6);\n        i0.ɵɵtext(32, \" 4. \");\n        i0.ɵɵelementStart(33, \"code\");\n        i0.ɵɵtext(34, \"tap\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(35, \" - To set the loading state before actually making an API call. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"li\", 6);\n        i0.ɵɵtext(37, \" 5. \");\n        i0.ɵɵelementStart(38, \"code\");\n        i0.ɵɵtext(39, \"switchMap\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40, \" - To switch the context of the Observable to the result of the \");\n        i0.ɵɵelementStart(41, \"code\");\n        i0.ɵɵtext(42, \"http.get\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(43, \" call. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"li\", 6);\n        i0.ɵɵtext(45, \" 6. \");\n        i0.ɵɵelementStart(46, \"code\");\n        i0.ɵɵtext(47, \"catchError\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(48, \" - To handle the errors coming in from API, just in case there are any. \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 1, ctx.model));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i2.AsyncPipe],\n    styles: [\"p[_ngcontent-%COMP%]{font-family:Lato}.mr-3[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:50%}.media[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%], .list-group-item[_ngcontent-%COMP%]{margin:10px}code[_ngcontent-%COMP%]{color:#c7254e}.form-control[_ngcontent-%COMP%]{margin:10px}\"]\n  });\n  return SearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}