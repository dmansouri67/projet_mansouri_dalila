{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Action, Selector, State } from '@ngxs/store';\nimport { AddProduit, RemoveProduit } from '../actions/cart-actions';\nimport * as i0 from \"@angular/core\";\nlet CartState = class CartState {\n  static getNbProduits(state) {\n    return state.produits.length;\n  }\n\n  add({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    const state = getState();\n    patchState({\n      produits: [...state.produits, payload]\n    });\n  }\n\n  delete({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    const state = getState();\n    patchState({\n      produits: state.produits.filter((produit, index) => index !== payload)\n    });\n  }\n\n};\n\nCartState.ɵfac = function CartState_Factory(t) {\n  return new (t || CartState)();\n};\n\nCartState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartState,\n  factory: CartState.ɵfac\n});\n\n__decorate([Action(AddProduit)], CartState.prototype, \"add\", null);\n\n__decorate([Action(RemoveProduit)], CartState.prototype, \"delete\", null);\n\n__decorate([Selector()], CartState, \"getNbProduits\", null);\n\nCartState = __decorate([State({\n  name: 'panier',\n  defaults: {\n    produits: []\n  }\n})], CartState);\nexport { CartState };","map":null,"metadata":{},"sourceType":"module"}