{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/produit.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"input\"];\n\nfunction SearchComponent_ul_6_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵelement(1, \"img\", 8);\n    i0.ɵɵelementStart(2, \"div\", 9)(3, \"h5\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", user_r4.avatar_url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_r4.login);\n  }\n}\n\nfunction SearchComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 5);\n    i0.ɵɵtemplate(1, SearchComponent_ul_6_li_1_Template, 5, 2, \"li\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const response_r2 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", response_r2.items);\n  }\n}\n\nexport class SearchComponent {\n  constructor(_service) {\n    this._service = _service;\n    this.search = '';\n  }\n\n  getSearchedProduct() {\n    this._service.getCatalogue().subscribe(data => {\n      this.catalogue = data.filter(catalogue => {\n        let predicate = true;\n\n        if (this.search != '') {\n          predicate = catalogue.race.toLowerCase().includes(this.search.toLowerCase());\n        }\n\n        return predicate;\n      });\n    });\n  }\n\n}\n\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.ProduitService));\n};\n\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  viewQuery: function SearchComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  decls: 8,\n  vars: 4,\n  consts: [[1, \"form-group\"], [\"for\", \"github-search\"], [\"id\", \"github-search\", \"type\", \"text\", \"placeholder\", \"GitHub Users\", 1, \"form-control\", 3, \"ngModel\", \"keypress\", \"ngModelChange\"], [\"input\", \"\"], [\"class\", \"list-unstyled\", 4, \"ngIf\"], [1, \"list-unstyled\"], [\"class\", \"media\", 4, \"ngFor\", \"ngForOf\"], [1, \"media\"], [\"alt\", \"user.login\", 1, \"mr-3\", 3, \"src\"], [1, \"media-body\"], [1, \"mt-0\", \"mb-1\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Search for GitHub Users:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2, 3);\n      i0.ɵɵlistener(\"keypress\", function SearchComponent_Template_input_keypress_3_listener() {\n        return ctx.getSearchedProduct();\n      })(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.search = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵtemplate(6, SearchComponent_ul_6_Template, 2, 1, \"ul\", 4);\n      i0.ɵɵpipe(7, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.search);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 2, ctx.model));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.AsyncPipe],\n  styles: [\"p[_ngcontent-%COMP%] \\r\\n{\\r\\n    font-family: Lato;\\r\\n}\\r\\n\\r\\n.mr-3[_ngcontent-%COMP%] \\r\\n{\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.media[_ngcontent-%COMP%] \\r\\n{\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.form-group[_ngcontent-%COMP%]\\r\\n{\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.list-group-item[_ngcontent-%COMP%]\\r\\n{\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\ncode[_ngcontent-%COMP%]{\\r\\n    color: #c7254e;\\r\\n}\\r\\n\\r\\n.form-control[_ngcontent-%COMP%]\\r\\n{\\r\\n    margin: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLGlCQUFpQjtBQUNyQjs7QUFFQTs7SUFFSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtBQUN0Qjs7QUFFQTs7SUFFSSxZQUFZO0FBQ2hCOztBQUVBOztJQUVJLFlBQVk7QUFDaEI7O0FBRUE7O0lBRUksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7O0lBRUksWUFBWTtBQUNoQiIsImZpbGUiOiJzZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAgXHJcbntcclxuICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xyXG59XHJcblxyXG4ubXItMyBcclxue1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbn1cclxuXHJcbi5tZWRpYSBcclxue1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4uZm9ybS1ncm91cFxyXG57XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5saXN0LWdyb3VwLWl0ZW1cclxue1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG5jb2Rle1xyXG4gICAgY29sb3I6ICNjNzI1NGU7XHJcbn1cclxuXHJcbi5mb3JtLWNvbnRyb2xcclxue1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAA2CA,UAA3C,QAA6D,eAA7D;AACA,SAASC,UAAT,QAA0C,MAA1C;;;;;;;;;ICkBIC;IACEA;IACAA,+BAAwB,CAAxB,EAAwB,IAAxB,EAAwB,EAAxB;IACwBA;IAAgBA;;;;;IAFnCA;IAAAA;IAEmBA;IAAAA;;;;;;IAJ5BA;IACEA;IAMFA;;;;;IANqCA;IAAAA;;;;ADCvC,OAAM,MAAOC,eAAP,CAAsB;EAM1BC,YAAoBC,QAApB,EAA4C;IAAxB;IAHpB,cAAgB,EAAhB;EAGgD;;EAEhDC,kBAAkB;IAChB,KAAKD,QAAL,CAAcE,YAAd,GAA6BC,SAA7B,CAAwCC,IAAD,IAAS;MAC9C,KAAKC,SAAL,GAAiBD,IAAI,CAACE,MAAL,CAAaD,SAAD,IAAgC;QAC3D,IAAIE,SAAS,GAAG,IAAhB;;QACA,IAAI,KAAKC,MAAL,IAAe,EAAnB,EAAuB;UACrBD,SAAS,GAAGF,SAAS,CAACI,IAAV,CACTC,WADS,GAETC,QAFS,CAEA,KAAKH,MAAL,CAAYE,WAAZ,EAFA,CAAZ;QAGD;;QACD,OAAOH,SAAP;MACD,CARgB,CAAjB;IASD,CAVD;EAWD;;AApByB;;;mBAAfT,iBAAeD;AAAA;;;QAAfC;EAAec;EAAAC;IAAA;;;;;;;;;;;;;;;MCrB5BhB,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC+BA;MAAwBA;MACnDA;MAMEA;QAAA,OAAYiB,wBAAZ;MAAgC,CAAhC,EAAiC,eAAjC,EAAiC;QAAA;MAAA,CAAjC;MANFjB;MAeFA;MAEAA;;;;;MAVIA;MAAAA;MAUuBA;MAAAA","names":["ElementRef","Observable","i0","SearchComponent","constructor","_service","getSearchedProduct","getCatalogue","subscribe","data","catalogue","filter","predicate","search","race","toLowerCase","includes","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Mansouri\\OneDrive\\Bureau\\EiCnam\\2A\\Web\\Projet\\cat'shop_project\\projet_mansouri_dalila_save\\FRONTEND\\src\\app\\search\\search.component.ts","C:\\Users\\Mansouri\\OneDrive\\Bureau\\EiCnam\\2A\\Web\\Projet\\cat'shop_project\\projet_mansouri_dalila_save\\FRONTEND\\src\\app\\search\\search.component.html"],"sourcesContent":["\nimport { Component, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { Observable, fromEvent, of } from 'rxjs';\n\nimport {\n  map,\n  distinctUntilChanged,\n  debounceTime,\n  tap,\n  switchMap,\n  catchError,\n} from 'rxjs/operators';\nimport { Catalogue } from '../interface/catalogue';\nimport { ProduitService } from '../service/produit.service';\nimport { SearchService } from '../service/search.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n})\nexport class SearchComponent{\n  catalogue : Catalogue[];\n  model: Observable<any>;\n  search: string ='';\n  @ViewChild('input', { static: true }) input: ElementRef;\n\n  constructor(private _service: ProduitService) {}\n\n  getSearchedProduct(): void {\n    this._service.getCatalogue().subscribe((data) => {\n      this.catalogue = data.filter((catalogue: { race: string }) => {\n        let predicate = true;\n        if (this.search != '') {\n          predicate = catalogue.race\n            .toLowerCase()\n            .includes(this.search.toLowerCase());\n        }\n        return predicate;\n      });\n    });\n  }\n\n  // ngAfterViewInit() {\n  //   this.searchField$ = fromEvent(this.input.nativeElement, `keyup`);\n  //   this.model = this.searchField$.pipe(\n  //     map((event) => event.target.value),\n  //     debounceTime(300),\n  //     distinctUntilChanged(),\n\n  //     switchMap((term) =>\n  //       this._service.search(term).pipe(\n  //         catchError(() => {\n  //           return of([]);\n  //         })\n  //       )\n  //     )\n  //   );\n  // }\n}","<div class=\"form-group\">\n    <label for=\"github-search\">Search for GitHub Users:</label>\n    <input\n      #input\n      id=\"github-search\"\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"GitHub Users\"\n      (keypress)=\"getSearchedProduct()\"\n      [(ngModel)]=\"search\"\n    />\n  \n    <!-- <div class=\"invalid-feedback\" *ngIf=\"searchFailed\">\n      Sorry, suggestions could not be loaded.\n    </div> -->\n  </div>\n  \n  <hr />\n  \n  <ul class=\"list-unstyled\" *ngIf=\"model | async as response\">\n    <li class=\"media\" *ngFor=\"let user of response.items\">\n      <img [src]=\"user.avatar_url\" class=\"mr-3\" alt=\"user.login\" />\n      <div class=\"media-body\">\n        <h5 class=\"mt-0 mb-1\">{{ user.login }}</h5>\n      </div>\n    </li>\n  </ul>\n  "]},"metadata":{},"sourceType":"module"}