{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { delay, of, tap } from 'rxjs';\nimport { User } from 'src/app/models/user.model';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.isLoggedIn = false;\n      this.URL_API_LOGIN = \"/User/\";\n      this.isAuth = false;\n      this.user = new User(\"\", \"\");\n    }\n\n    login1(name, password) {\n      const isLoggedIn = name == 'admin' && password == 'admin';\n      return of(isLoggedIn).pipe(delay(1000), tap(isLoggedIn => this.isLoggedIn = isLoggedIn));\n    }\n\n    login(username, password) {\n      let data = \"username=\" + username + \"&password=\" + password;\n      let httpOption = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n      };\n      return this.http.post(environment.apiUrl + this.URL_API_LOGIN + \"Login\", data, httpOption);\n    }\n\n    logout() {\n      this.isLoggedIn = false;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();\n\nfunction shajs(arg0) {\n  throw new Error('Function not implemented.');\n}","map":null,"metadata":{},"sourceType":"module"}